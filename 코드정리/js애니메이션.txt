.animate()
$("selector"),animate(properties);
$("selector"),animate(properties, duration);
$("selector"),animate(properties, duration, easing);
$("selector"),animate(properties, duration, easing, collback);

properties는 애니메이션의 속성과 값을 설정합니다.

properties에 올 수 있는 값:
border, margin, padding, height, width, font-size, bottom, left, top, right, line-height;
properties에 올 수 없는 값:
background-color, transform

속성 표기 방법

//폰트 사이즈를 현재 크기에서 20px로 2초동안 애니메이션합니다.
$("selector"),animate({ "font-size": "20px" },2000);
$("selector"),animate({ fontSize: "20px" },2000);
//선택한 요소의 왼쪽 오른쪽 마진값을 100px로 600밀리세컨드 동안 애니메이션합니다.
$("selector"),animate({ marginLeft:100, marginRight:100 },600);
$("selector"),animate({ "margin-left:"100px", "margin-right":"100px" },"slow");
//선택한 요소의 현재 위치를 기준으로 오른쪽으로 2초마다 20px만큼 이동한 후, 콜백함수를 호출합니다.
$("selector"),animate({ left:"+=20" },2000,function(){});



.animate() ♥	선택한 요소에 애니메이션을 적용합니다.
.clearQueue()	선택한 요소에 첫 번째 큐만 실행하고 대기 중인 큐는 모두 삭제합니다.
.delay()	선택한 요소의 애니메이션 효과를 지연합니다.
.dequeue()	선택한 요소 스택에 쌓인 큐를 모두 제거합니다.
.finish()	선택한 요소의 진행 중인 애니메이션을 강제로 종료합니다.
.queue()	선택한 요소 스택에 대기 중인 큐를 반환하거나 추가할 수 있습니다.
.stop()	선택한 요소의 실행 중인 애니메이션을 정지합니다.


$(".btn-wrap > span").click(function(e){
    e.preventDefault();
    var easing = $(this).attr("data-easing");
    $(".box4 > .circle")
        .animate({ left: "80%" },1000, easing)
        .animate({ top: "50%" },1000, easing)
        .animate({ left: "0%" },1000, easing)
        .animate({ top: "0%" },1000, easing);
})

Animation7 : 무한 반복 애니메이션
$(".btn15").click(function(){
   loop();
}); 
function loop(){
    $(".box15 > div")
        .animate({ left:"85%"},1000,"easeOutQuint")
        .animate({ left:"0"},1000,"easeOutQuint",loop)
}

Animation8 : 일정한 애니메이션
$(".btn16").click(function(){
   setInterval(time,2000);
}); 
function time(){
    $(".box16 > div").animate({left:"+=100"},500,"easeOutQuint").animate({left:"-=50"},500,"easeOutQuint");
}

Animation9 : 사라지는 애니메이션
$(".btn17").click(function(e){
   $(".box17 > div").animate({left:"85%"},1000,"easeOutQuint").animate({left:"0"},1000,"easeOutQuint");
   setTimeout(out,4000)
});
function out(){
    $(".box17").clearQueue().hide();
}


Animation10 : 시간차 애니메이션
$(".btn18").click(function(e){
   $(".box18 > div").each(function(index){
       $(this).delay(index*200).animate({left:"90%"},1000,"easeOutQuint").animate({left:"0"},1000,"easeOutQuint");
   })
});

Animation11 : toggle 애니메이션
$(".btn19").click(function(e){
   $(".box19 > div").animate({height:"toggle", opacity:"toggle"},"fast","easeOutQuint")
});

Animation12 : 콜백함수
$(".btn20").click(function(e){
    $(".box20 > div").animate({ left:"85%" },1000,"easeOutQuint",function(){
        alert("도착");
    });
});




$(window).scroll(function(e){
  e.preventDefault();
  var wScroll = $(window).scrollTop();
  
  var offset2 = (wScroll - $(".s2 .scrolled1").offset().top) * 0.5;
  var offset3 = (wScroll - $(".s2 .scrolled2").offset().top) * 0.2;
  

  
  $(".s6 .scrolled1").css({'transform' : 'translateY('+offset10+'px)' });
  $(".s6 .scrolled2").css({'transform' : 'translateY('+offset11+'px)' });
});

var nav = $("#nav ul li");             //버튼을 변수에 할당(저장)
var cont = $("#contents > div");       //각 컨텐츠를 변수에 할당

nav.click(function(e){
    e.preventDefault();                  //#의 기본 기능 차단
    var target = $(this);                //버튼의 타겟을 변수에 할당
    var index = target.index()           //각 버튼의 인덱스(순서)를 설정
    var section = cont.eq(index)         //각 컨텐츠를 변수에 할당
    var offset = section.offset().top;   //각 세션의 offset값을 할당
    $("html, body").animate({ scrollTop : offset },900,"easeInOutBack");
    
});


http://wldnjs7204.dothome.co.kr/animation-js/index.html#intro8